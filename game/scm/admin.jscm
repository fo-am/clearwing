;; -*- mode: scheme; -*-

(load "flx/scm/base.jscm")
(load "scm/local-storage.jscm")

(define (get-data-as-csv)
  (define (_ n max r)
    (cond 
     ((> n max) r)
     (else
      (if (local-exists? (string-append "clearwing-" (string-append "hits-" n)))
	  (_ (+ n 1) max 
	     (string-append
	      r (local->csv "clearwing" (string-append "hits-" n)) "\\n"))
	  (_ (+ n 1) max r)))))
  (dbg (_ 0 (local-get-param "clearwing" "Session ID") 
	  "data-version, game-time, session, butterfly-id, state, type, screen-size-pixels, camera-distance, mouse-x, mouse-y, world-x, world-y, world-z, dir-x, dir-y, dir-z, screen-time, random-seed, background, plant-seed\\n")))

(define (set-game-param key value)
  (local-set-param "clearwing" key value))

(define admin-version 2)

(define (version-check)
  (let ((version (string->number (local-load "clearwing-version"))))
    (when (or (not version)
	      (< version admin-version))
	  (msg (string-append "Resetting local data to version " admin-version))
	  (local-nuke)
	  (local-save "clearwing-version" admin-version)
	  )))


(define (butterfly-form name selected)
  (let ((id (string-append (car name) "-" (cadr name))))
    (string-append
     "<div style='display:inline-block; width:100px'>
     <button id='" id "' onclick='butterfly_toggle(this);'>
       <img src='textures/" (car name) "-w-" (cadr name) ".png' width=100 height=100>
     </button>
     <center><div id='" id "-text'>" 
     (if (list-contains? selected id) "ON" "OFF") 
     "</div></center>
   </div>")))

(define (butterfly-toggle a b)
  (let ((name a.id))
    (let ((c (document.getElementById (string-append name "-text")))
	  (selected (local-load "clearwing-selected")))
      (cond 
       ((list-contains? selected name)	 
	(local-save "clearwing-selected" (list-remove selected name))
	(set! c.innerHTML "OFF"))
       (else
	(local-save "clearwing-selected" (cons name selected))
	(set! c.innerHTML "ON"))))))

(define (setup-morph-interface)
  (let ((c ($ ".morph-list") )
	(selected (local-load-or-create "clearwing-selected" '())))
    (for-each
     (lambda (name)
       (c.append (butterfly-form name selected)))
     butterfly-types)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		 
(version-check)

(define butterfly-types    
  (list
   (list "hypolaria" "014")
   (list "hypothyris" "017")
   (list "ithomia" "013")))

(setup-morph-interface)

(local-setup-params 
 "clearwing" 
 (list
  (list "Session ID" 0)
  (list "Butterfly Speed" 0.0625)
  (list "Flap Speed" 8)
  (list "Max Population" 10)
  (list "New Butterfly Chance" 0.01)
  (list "Appearance Area Width" 40)
  (list "Appearance Area Height" 20)
  (list "Appearance Depth" -80)
  (list "Health Decrease" 7)
  (list "Health Increase" 10)
  (list "Path Variation Degrees" 20)
  (list "Circle Speed" 3)
  (list "Circle Timeout Seconds" 10)
  (list "Hit Leeway Pixels" 10)
  ))

